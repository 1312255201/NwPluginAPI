### YamlMime:ManagedReference
items:
- uid: PluginAPI.Core.Whitelist
  commentId: T:PluginAPI.Core.Whitelist
  id: Whitelist
  parent: PluginAPI.Core
  children:
  - PluginAPI.Core.Whitelist.Add(System.String)
  - PluginAPI.Core.Whitelist.Count
  - PluginAPI.Core.Whitelist.FilePath
  - PluginAPI.Core.Whitelist.IsOnWhitelist(System.String)
  - PluginAPI.Core.Whitelist.List
  - PluginAPI.Core.Whitelist.Reload
  - PluginAPI.Core.Whitelist.Remove(System.String)
  langs:
  - csharp
  - vb
  name: Whitelist
  nameWithType: Whitelist
  fullName: PluginAPI.Core.Whitelist
  type: Class
  source:
    remote:
      path: NwPluginAPI/Core/Whitelist.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: Whitelist
    path: ../NwPluginAPI/Core/Whitelist.cs
    startLine: 6
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  syntax:
    content: public class Whitelist
    content.vb: Public Class Whitelist
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: PluginAPI.Core.Whitelist.FilePath
  commentId: P:PluginAPI.Core.Whitelist.FilePath
  id: FilePath
  parent: PluginAPI.Core.Whitelist
  langs:
  - csharp
  - vb
  name: FilePath
  nameWithType: Whitelist.FilePath
  fullName: PluginAPI.Core.Whitelist.FilePath
  type: Property
  source:
    remote:
      path: NwPluginAPI/Core/Whitelist.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: FilePath
    path: ../NwPluginAPI/Core/Whitelist.cs
    startLine: 11
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nPath to UserIDWhitelist file.\n"
  example: []
  syntax:
    content: public static string FilePath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property FilePath As String
  overload: PluginAPI.Core.Whitelist.FilePath*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: PluginAPI.Core.Whitelist.List
  commentId: F:PluginAPI.Core.Whitelist.List
  id: List
  parent: PluginAPI.Core.Whitelist
  langs:
  - csharp
  - vb
  name: List
  nameWithType: Whitelist.List
  fullName: PluginAPI.Core.Whitelist.List
  type: Field
  source:
    remote:
      path: NwPluginAPI/Core/Whitelist.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: List
    path: ../NwPluginAPI/Core/Whitelist.cs
    startLine: 16
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nList of all whitelisted users.\n"
  example: []
  syntax:
    content: public static readonly IEnumerable<string> List
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public Shared ReadOnly List As IEnumerable(Of String)
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: PluginAPI.Core.Whitelist.Count
  commentId: F:PluginAPI.Core.Whitelist.Count
  id: Count
  parent: PluginAPI.Core.Whitelist
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: Whitelist.Count
  fullName: PluginAPI.Core.Whitelist.Count
  type: Field
  source:
    remote:
      path: NwPluginAPI/Core/Whitelist.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: Count
    path: ../NwPluginAPI/Core/Whitelist.cs
    startLine: 21
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nAmount of players whitelisted.\n"
  example: []
  syntax:
    content: public static readonly int Count
    return:
      type: System.Int32
    content.vb: Public Shared ReadOnly Count As Integer
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: PluginAPI.Core.Whitelist.IsOnWhitelist(System.String)
  commentId: M:PluginAPI.Core.Whitelist.IsOnWhitelist(System.String)
  id: IsOnWhitelist(System.String)
  parent: PluginAPI.Core.Whitelist
  langs:
  - csharp
  - vb
  name: IsOnWhitelist(String)
  nameWithType: Whitelist.IsOnWhitelist(String)
  fullName: PluginAPI.Core.Whitelist.IsOnWhitelist(System.String)
  type: Method
  source:
    remote:
      path: NwPluginAPI/Core/Whitelist.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: IsOnWhitelist
    path: ../NwPluginAPI/Core/Whitelist.cs
    startLine: 28
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nChecks if player is on whitelist.\n"
  example: []
  syntax:
    content: public static bool IsOnWhitelist(string userId)
    parameters:
    - id: userId
      type: System.String
      description: The userid.
    return:
      type: System.Boolean
      description: If player is on whitelist.
    content.vb: Public Shared Function IsOnWhitelist(userId As String) As Boolean
  overload: PluginAPI.Core.Whitelist.IsOnWhitelist*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PluginAPI.Core.Whitelist.Reload
  commentId: M:PluginAPI.Core.Whitelist.Reload
  id: Reload
  parent: PluginAPI.Core.Whitelist
  langs:
  - csharp
  - vb
  name: Reload()
  nameWithType: Whitelist.Reload()
  fullName: PluginAPI.Core.Whitelist.Reload()
  type: Method
  source:
    remote:
      path: NwPluginAPI/Core/Whitelist.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: Reload
    path: ../NwPluginAPI/Core/Whitelist.cs
    startLine: 33
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nReloads whitelist.\n"
  example: []
  syntax:
    content: public static void Reload()
    content.vb: Public Shared Sub Reload
  overload: PluginAPI.Core.Whitelist.Reload*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PluginAPI.Core.Whitelist.Add(System.String)
  commentId: M:PluginAPI.Core.Whitelist.Add(System.String)
  id: Add(System.String)
  parent: PluginAPI.Core.Whitelist
  langs:
  - csharp
  - vb
  name: Add(String)
  nameWithType: Whitelist.Add(String)
  fullName: PluginAPI.Core.Whitelist.Add(System.String)
  type: Method
  source:
    remote:
      path: NwPluginAPI/Core/Whitelist.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: Add
    path: ../NwPluginAPI/Core/Whitelist.cs
    startLine: 39
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nAdds player to whitelist and saves it to file.\n"
  example: []
  syntax:
    content: public static void Add(string userId)
    parameters:
    - id: userId
      type: System.String
      description: The userid.
    content.vb: Public Shared Sub Add(userId As String)
  overload: PluginAPI.Core.Whitelist.Add*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PluginAPI.Core.Whitelist.Remove(System.String)
  commentId: M:PluginAPI.Core.Whitelist.Remove(System.String)
  id: Remove(System.String)
  parent: PluginAPI.Core.Whitelist
  langs:
  - csharp
  - vb
  name: Remove(String)
  nameWithType: Whitelist.Remove(String)
  fullName: PluginAPI.Core.Whitelist.Remove(System.String)
  type: Method
  source:
    remote:
      path: NwPluginAPI/Core/Whitelist.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: Remove
    path: ../NwPluginAPI/Core/Whitelist.cs
    startLine: 55
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nRemoves player from whitelist and saves it to file.\n"
  example: []
  syntax:
    content: public static void Remove(string userId)
    parameters:
    - id: userId
      type: System.String
      description: The userid.
    content.vb: Public Shared Sub Remove(userId As String)
  overload: PluginAPI.Core.Whitelist.Remove*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: PluginAPI.Core
  commentId: N:PluginAPI.Core
  name: PluginAPI.Core
  nameWithType: PluginAPI.Core
  fullName: PluginAPI.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: PluginAPI.Core.Whitelist.FilePath*
  commentId: Overload:PluginAPI.Core.Whitelist.FilePath
  name: FilePath
  nameWithType: Whitelist.FilePath
  fullName: PluginAPI.Core.Whitelist.FilePath
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: PluginAPI.Core.Whitelist.IsOnWhitelist*
  commentId: Overload:PluginAPI.Core.Whitelist.IsOnWhitelist
  name: IsOnWhitelist
  nameWithType: Whitelist.IsOnWhitelist
  fullName: PluginAPI.Core.Whitelist.IsOnWhitelist
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: PluginAPI.Core.Whitelist.Reload*
  commentId: Overload:PluginAPI.Core.Whitelist.Reload
  name: Reload
  nameWithType: Whitelist.Reload
  fullName: PluginAPI.Core.Whitelist.Reload
- uid: PluginAPI.Core.Whitelist.Add*
  commentId: Overload:PluginAPI.Core.Whitelist.Add
  name: Add
  nameWithType: Whitelist.Add
  fullName: PluginAPI.Core.Whitelist.Add
- uid: PluginAPI.Core.Whitelist.Remove*
  commentId: Overload:PluginAPI.Core.Whitelist.Remove
  name: Remove
  nameWithType: Whitelist.Remove
  fullName: PluginAPI.Core.Whitelist.Remove
