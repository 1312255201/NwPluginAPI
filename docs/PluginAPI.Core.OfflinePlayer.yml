### YamlMime:ManagedReference
items:
- uid: PluginAPI.Core.OfflinePlayer
  commentId: T:PluginAPI.Core.OfflinePlayer
  id: OfflinePlayer
  parent: PluginAPI.Core
  children:
  - PluginAPI.Core.OfflinePlayer.#ctor(System.String,System.String,System.String)
  - PluginAPI.Core.OfflinePlayer.IpAddress
  - PluginAPI.Core.OfflinePlayer.Nickname
  - PluginAPI.Core.OfflinePlayer.UserId
  langs:
  - csharp
  - vb
  name: OfflinePlayer
  nameWithType: OfflinePlayer
  fullName: PluginAPI.Core.OfflinePlayer
  type: Class
  source:
    remote:
      path: NwPluginAPI/Core/OfflinePlayer.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: OfflinePlayer
    path: ../NwPluginAPI/Core/OfflinePlayer.cs
    startLine: 4
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  syntax:
    content: 'public class OfflinePlayer : IPlayer, IEntity'
    content.vb: >-
      Public Class OfflinePlayer
          Implements IPlayer, IEntity
  inheritance:
  - System.Object
  implements:
  - PluginAPI.Core.Interfaces.IPlayer
  - PluginAPI.Core.Interfaces.IEntity
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: PluginAPI.Core.OfflinePlayer.UserId
  commentId: P:PluginAPI.Core.OfflinePlayer.UserId
  id: UserId
  parent: PluginAPI.Core.OfflinePlayer
  langs:
  - csharp
  - vb
  name: UserId
  nameWithType: OfflinePlayer.UserId
  fullName: PluginAPI.Core.OfflinePlayer.UserId
  type: Property
  source:
    remote:
      path: NwPluginAPI/Core/OfflinePlayer.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: UserId
    path: ../NwPluginAPI/Core/OfflinePlayer.cs
    startLine: 9
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nGets the player&apos;s user id.\n"
  example: []
  syntax:
    content: public string UserId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property UserId As String
  overload: PluginAPI.Core.OfflinePlayer.UserId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: PluginAPI.Core.OfflinePlayer.Nickname
  commentId: P:PluginAPI.Core.OfflinePlayer.Nickname
  id: Nickname
  parent: PluginAPI.Core.OfflinePlayer
  langs:
  - csharp
  - vb
  name: Nickname
  nameWithType: OfflinePlayer.Nickname
  fullName: PluginAPI.Core.OfflinePlayer.Nickname
  type: Property
  source:
    remote:
      path: NwPluginAPI/Core/OfflinePlayer.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: Nickname
    path: ../NwPluginAPI/Core/OfflinePlayer.cs
    startLine: 14
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nGets the player&apos;s name.\n"
  example: []
  syntax:
    content: public string Nickname { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Nickname As String
  overload: PluginAPI.Core.OfflinePlayer.Nickname*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: PluginAPI.Core.OfflinePlayer.IpAddress
  commentId: P:PluginAPI.Core.OfflinePlayer.IpAddress
  id: IpAddress
  parent: PluginAPI.Core.OfflinePlayer
  langs:
  - csharp
  - vb
  name: IpAddress
  nameWithType: OfflinePlayer.IpAddress
  fullName: PluginAPI.Core.OfflinePlayer.IpAddress
  type: Property
  source:
    remote:
      path: NwPluginAPI/Core/OfflinePlayer.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: IpAddress
    path: ../NwPluginAPI/Core/OfflinePlayer.cs
    startLine: 19
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nGets the player&apos;s ip address.\n"
  example: []
  syntax:
    content: public string IpAddress { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property IpAddress As String
  overload: PluginAPI.Core.OfflinePlayer.IpAddress*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: PluginAPI.Core.OfflinePlayer.#ctor(System.String,System.String,System.String)
  commentId: M:PluginAPI.Core.OfflinePlayer.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: PluginAPI.Core.OfflinePlayer
  langs:
  - csharp
  - vb
  name: OfflinePlayer(String, String, String)
  nameWithType: OfflinePlayer.OfflinePlayer(String, String, String)
  fullName: PluginAPI.Core.OfflinePlayer.OfflinePlayer(System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: NwPluginAPI/Core/OfflinePlayer.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: .ctor
    path: ../NwPluginAPI/Core/OfflinePlayer.cs
    startLine: 27
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nConstructor for offline player.\n"
  example: []
  syntax:
    content: public OfflinePlayer(string userId, string name = "(no nick)", string ipAddress = "127.0.0.1")
    parameters:
    - id: userId
      type: System.String
      description: The user id.
    - id: name
      type: System.String
      description: The nick name.
    - id: ipAddress
      type: System.String
      description: The ip address.
    content.vb: Public Sub New(userId As String, name As String = "(no nick)", ipAddress As String = "127.0.0.1")
  overload: PluginAPI.Core.OfflinePlayer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: PluginAPI.Core
  commentId: N:PluginAPI.Core
  name: PluginAPI.Core
  nameWithType: PluginAPI.Core
  fullName: PluginAPI.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: PluginAPI.Core.Interfaces.IPlayer
  commentId: T:PluginAPI.Core.Interfaces.IPlayer
  parent: PluginAPI.Core.Interfaces
  name: IPlayer
  nameWithType: IPlayer
  fullName: PluginAPI.Core.Interfaces.IPlayer
- uid: PluginAPI.Core.Interfaces.IEntity
  commentId: T:PluginAPI.Core.Interfaces.IEntity
  parent: PluginAPI.Core.Interfaces
  name: IEntity
  nameWithType: IEntity
  fullName: PluginAPI.Core.Interfaces.IEntity
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: PluginAPI.Core.Interfaces
  commentId: N:PluginAPI.Core.Interfaces
  name: PluginAPI.Core.Interfaces
  nameWithType: PluginAPI.Core.Interfaces
  fullName: PluginAPI.Core.Interfaces
- uid: PluginAPI.Core.OfflinePlayer.UserId*
  commentId: Overload:PluginAPI.Core.OfflinePlayer.UserId
  name: UserId
  nameWithType: OfflinePlayer.UserId
  fullName: PluginAPI.Core.OfflinePlayer.UserId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: PluginAPI.Core.OfflinePlayer.Nickname*
  commentId: Overload:PluginAPI.Core.OfflinePlayer.Nickname
  name: Nickname
  nameWithType: OfflinePlayer.Nickname
  fullName: PluginAPI.Core.OfflinePlayer.Nickname
- uid: PluginAPI.Core.OfflinePlayer.IpAddress*
  commentId: Overload:PluginAPI.Core.OfflinePlayer.IpAddress
  name: IpAddress
  nameWithType: OfflinePlayer.IpAddress
  fullName: PluginAPI.Core.OfflinePlayer.IpAddress
- uid: PluginAPI.Core.OfflinePlayer.#ctor*
  commentId: Overload:PluginAPI.Core.OfflinePlayer.#ctor
  name: OfflinePlayer
  nameWithType: OfflinePlayer.OfflinePlayer
  fullName: PluginAPI.Core.OfflinePlayer.OfflinePlayer
