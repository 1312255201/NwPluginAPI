### YamlMime:ManagedReference
items:
- uid: PluginAPI.Events.TeamRespawnEvent
  commentId: T:PluginAPI.Events.TeamRespawnEvent
  id: TeamRespawnEvent
  parent: PluginAPI.Events
  children:
  - PluginAPI.Events.TeamRespawnEvent.#ctor(Respawning.SpawnableTeamType,System.Collections.Generic.List{ReferenceHub})
  - PluginAPI.Events.TeamRespawnEvent.BaseType
  - PluginAPI.Events.TeamRespawnEvent.NextWaveMaxSize
  - PluginAPI.Events.TeamRespawnEvent.Players
  - PluginAPI.Events.TeamRespawnEvent.Team
  langs:
  - csharp
  - vb
  name: TeamRespawnEvent
  nameWithType: TeamRespawnEvent
  fullName: PluginAPI.Events.TeamRespawnEvent
  type: Class
  source:
    remote:
      path: NwPluginAPI/Events/Args/Server/TeamRespawnEvent.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: TeamRespawnEvent
    path: ../NwPluginAPI/Events/Args/Server/TeamRespawnEvent.cs
    startLine: 8
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Events
  syntax:
    content: 'public class TeamRespawnEvent : IEventArguments'
    content.vb: >-
      Public Class TeamRespawnEvent
          Implements IEventArguments
  inheritance:
  - System.Object
  implements:
  - PluginAPI.Events.IEventArguments
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: PluginAPI.Events.TeamRespawnEvent.BaseType
  commentId: P:PluginAPI.Events.TeamRespawnEvent.BaseType
  id: BaseType
  parent: PluginAPI.Events.TeamRespawnEvent
  langs:
  - csharp
  - vb
  name: BaseType
  nameWithType: TeamRespawnEvent.BaseType
  fullName: PluginAPI.Events.TeamRespawnEvent.BaseType
  type: Property
  source:
    remote:
      path: NwPluginAPI/Events/Args/Server/TeamRespawnEvent.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: BaseType
    path: ../NwPluginAPI/Events/Args/Server/TeamRespawnEvent.cs
    startLine: 10
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Events
  syntax:
    content: public ServerEventType BaseType { get; }
    parameters: []
    return:
      type: PluginAPI.Enums.ServerEventType
    content.vb: Public ReadOnly Property BaseType As ServerEventType
  overload: PluginAPI.Events.TeamRespawnEvent.BaseType*
  implements:
  - PluginAPI.Events.IEventArguments.BaseType
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: PluginAPI.Events.TeamRespawnEvent.Team
  commentId: P:PluginAPI.Events.TeamRespawnEvent.Team
  id: Team
  parent: PluginAPI.Events.TeamRespawnEvent
  langs:
  - csharp
  - vb
  name: Team
  nameWithType: TeamRespawnEvent.Team
  fullName: PluginAPI.Events.TeamRespawnEvent.Team
  type: Property
  source:
    remote:
      path: NwPluginAPI/Events/Args/Server/TeamRespawnEvent.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: Team
    path: ../NwPluginAPI/Events/Args/Server/TeamRespawnEvent.cs
    startLine: 11
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Events
  syntax:
    content: public SpawnableTeamType Team { get; set; }
    parameters: []
    return:
      type: Respawning.SpawnableTeamType
    content.vb: Public Property Team As SpawnableTeamType
  overload: PluginAPI.Events.TeamRespawnEvent.Team*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PluginAPI.Events.TeamRespawnEvent.Players
  commentId: P:PluginAPI.Events.TeamRespawnEvent.Players
  id: Players
  parent: PluginAPI.Events.TeamRespawnEvent
  langs:
  - csharp
  - vb
  name: Players
  nameWithType: TeamRespawnEvent.Players
  fullName: PluginAPI.Events.TeamRespawnEvent.Players
  type: Property
  source:
    remote:
      path: NwPluginAPI/Events/Args/Server/TeamRespawnEvent.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: Players
    path: ../NwPluginAPI/Events/Args/Server/TeamRespawnEvent.cs
    startLine: 13
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Events
  syntax:
    content: public List<Player> Players { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{PluginAPI.Core.Player}
    content.vb: Public Property Players As List(Of Player)
  overload: PluginAPI.Events.TeamRespawnEvent.Players*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PluginAPI.Events.TeamRespawnEvent.NextWaveMaxSize
  commentId: P:PluginAPI.Events.TeamRespawnEvent.NextWaveMaxSize
  id: NextWaveMaxSize
  parent: PluginAPI.Events.TeamRespawnEvent
  langs:
  - csharp
  - vb
  name: NextWaveMaxSize
  nameWithType: TeamRespawnEvent.NextWaveMaxSize
  fullName: PluginAPI.Events.TeamRespawnEvent.NextWaveMaxSize
  type: Property
  source:
    remote:
      path: NwPluginAPI/Events/Args/Server/TeamRespawnEvent.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: NextWaveMaxSize
    path: ../NwPluginAPI/Events/Args/Server/TeamRespawnEvent.cs
    startLine: 15
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Events
  syntax:
    content: public int NextWaveMaxSize { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property NextWaveMaxSize As Integer
  overload: PluginAPI.Events.TeamRespawnEvent.NextWaveMaxSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PluginAPI.Events.TeamRespawnEvent.#ctor(Respawning.SpawnableTeamType,System.Collections.Generic.List{ReferenceHub})
  commentId: M:PluginAPI.Events.TeamRespawnEvent.#ctor(Respawning.SpawnableTeamType,System.Collections.Generic.List{ReferenceHub})
  id: '#ctor(Respawning.SpawnableTeamType,System.Collections.Generic.List{ReferenceHub})'
  parent: PluginAPI.Events.TeamRespawnEvent
  langs:
  - csharp
  - vb
  name: TeamRespawnEvent(SpawnableTeamType, List<ReferenceHub>)
  nameWithType: TeamRespawnEvent.TeamRespawnEvent(SpawnableTeamType, List<ReferenceHub>)
  fullName: PluginAPI.Events.TeamRespawnEvent.TeamRespawnEvent(Respawning.SpawnableTeamType, System.Collections.Generic.List<ReferenceHub>)
  type: Constructor
  source:
    remote:
      path: NwPluginAPI/Events/Args/Server/TeamRespawnEvent.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: .ctor
    path: ../NwPluginAPI/Events/Args/Server/TeamRespawnEvent.cs
    startLine: 18
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Events
  syntax:
    content: public TeamRespawnEvent(SpawnableTeamType team, List<ReferenceHub> spectators)
    parameters:
    - id: team
      type: Respawning.SpawnableTeamType
    - id: spectators
      type: System.Collections.Generic.List{ReferenceHub}
    content.vb: Public Sub New(team As SpawnableTeamType, spectators As List(Of ReferenceHub))
  overload: PluginAPI.Events.TeamRespawnEvent.#ctor*
  nameWithType.vb: TeamRespawnEvent.TeamRespawnEvent(SpawnableTeamType, List(Of ReferenceHub))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: PluginAPI.Events.TeamRespawnEvent.TeamRespawnEvent(Respawning.SpawnableTeamType, System.Collections.Generic.List(Of ReferenceHub))
  name.vb: TeamRespawnEvent(SpawnableTeamType, List(Of ReferenceHub))
references:
- uid: PluginAPI.Events
  commentId: N:PluginAPI.Events
  name: PluginAPI.Events
  nameWithType: PluginAPI.Events
  fullName: PluginAPI.Events
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: PluginAPI.Events.IEventArguments
  commentId: T:PluginAPI.Events.IEventArguments
  parent: PluginAPI.Events
  name: IEventArguments
  nameWithType: IEventArguments
  fullName: PluginAPI.Events.IEventArguments
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: PluginAPI.Events.TeamRespawnEvent.BaseType*
  commentId: Overload:PluginAPI.Events.TeamRespawnEvent.BaseType
  name: BaseType
  nameWithType: TeamRespawnEvent.BaseType
  fullName: PluginAPI.Events.TeamRespawnEvent.BaseType
- uid: PluginAPI.Events.IEventArguments.BaseType
  commentId: P:PluginAPI.Events.IEventArguments.BaseType
  parent: PluginAPI.Events.IEventArguments
  name: BaseType
  nameWithType: IEventArguments.BaseType
  fullName: PluginAPI.Events.IEventArguments.BaseType
- uid: PluginAPI.Enums.ServerEventType
  commentId: T:PluginAPI.Enums.ServerEventType
  parent: PluginAPI.Enums
  name: ServerEventType
  nameWithType: ServerEventType
  fullName: PluginAPI.Enums.ServerEventType
- uid: PluginAPI.Enums
  commentId: N:PluginAPI.Enums
  name: PluginAPI.Enums
  nameWithType: PluginAPI.Enums
  fullName: PluginAPI.Enums
- uid: PluginAPI.Events.TeamRespawnEvent.Team*
  commentId: Overload:PluginAPI.Events.TeamRespawnEvent.Team
  name: Team
  nameWithType: TeamRespawnEvent.Team
  fullName: PluginAPI.Events.TeamRespawnEvent.Team
- uid: Respawning.SpawnableTeamType
  commentId: T:Respawning.SpawnableTeamType
  parent: Respawning
  isExternal: true
  name: SpawnableTeamType
  nameWithType: SpawnableTeamType
  fullName: Respawning.SpawnableTeamType
- uid: Respawning
  commentId: N:Respawning
  isExternal: true
  name: Respawning
  nameWithType: Respawning
  fullName: Respawning
- uid: PluginAPI.Events.TeamRespawnEvent.Players*
  commentId: Overload:PluginAPI.Events.TeamRespawnEvent.Players
  name: Players
  nameWithType: TeamRespawnEvent.Players
  fullName: PluginAPI.Events.TeamRespawnEvent.Players
- uid: System.Collections.Generic.List{PluginAPI.Core.Player}
  commentId: T:System.Collections.Generic.List{PluginAPI.Core.Player}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Player>
  nameWithType: List<Player>
  fullName: System.Collections.Generic.List<PluginAPI.Core.Player>
  nameWithType.vb: List(Of Player)
  fullName.vb: System.Collections.Generic.List(Of PluginAPI.Core.Player)
  name.vb: List(Of Player)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PluginAPI.Core.Player
    name: Player
    nameWithType: Player
    fullName: PluginAPI.Core.Player
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PluginAPI.Core.Player
    name: Player
    nameWithType: Player
    fullName: PluginAPI.Core.Player
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: PluginAPI.Events.TeamRespawnEvent.NextWaveMaxSize*
  commentId: Overload:PluginAPI.Events.TeamRespawnEvent.NextWaveMaxSize
  name: NextWaveMaxSize
  nameWithType: TeamRespawnEvent.NextWaveMaxSize
  fullName: PluginAPI.Events.TeamRespawnEvent.NextWaveMaxSize
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: PluginAPI.Events.TeamRespawnEvent.#ctor*
  commentId: Overload:PluginAPI.Events.TeamRespawnEvent.#ctor
  name: TeamRespawnEvent
  nameWithType: TeamRespawnEvent.TeamRespawnEvent
  fullName: PluginAPI.Events.TeamRespawnEvent.TeamRespawnEvent
- uid: System.Collections.Generic.List{ReferenceHub}
  commentId: T:System.Collections.Generic.List{ReferenceHub}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ReferenceHub>
  nameWithType: List<ReferenceHub>
  fullName: System.Collections.Generic.List<ReferenceHub>
  nameWithType.vb: List(Of ReferenceHub)
  fullName.vb: System.Collections.Generic.List(Of ReferenceHub)
  name.vb: List(Of ReferenceHub)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ReferenceHub
    name: ReferenceHub
    nameWithType: ReferenceHub
    fullName: ReferenceHub
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ReferenceHub
    name: ReferenceHub
    nameWithType: ReferenceHub
    fullName: ReferenceHub
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
